/*
Create G(x)
*/

class Gx
{
	public static alpha =
	[
		  1,   2,   4,   8,  16,  32,  64, 128,
		 29,  58, 116, 232, 205, 135,  19,  38,
		 76, 152,  45,  90, 180, 117, 234, 201,
		143,   3,   6,  12,  24,  48,  96, 192,
		157,  39,  78, 156,  37,  74, 148,  53,
		106, 212, 181, 119, 238, 193, 159,  35,
		 70, 140,   5,  10,  20,  40,  80, 160,
		 93, 186, 105, 210, 185, 111, 222, 161,
		 95, 190,  97, 194, 153,  47,  94, 188,
		101, 202, 137,  15,  30,  60, 120, 240,
		253, 231, 211, 187, 107, 214, 177, 127,
		254, 225, 223, 163,  91, 182, 113, 226,
		217, 175,  67, 134,  17,  34,  68, 136,
		 13,  26,  52, 104, 208, 189, 103, 206,
		129,  31,  62, 124, 248, 237, 199, 147,
		 59, 118, 236, 197, 151,  51, 102, 204,
		133,  23,  46,  92, 184, 109, 218, 169,
		 79, 158,  33,  66, 132,  21,  42,  84,
		168,  77, 154,  41,  82, 164,  85, 170,
		 73, 146,  57, 114, 228, 213, 183, 115,
		230, 209, 191,  99, 198, 145,  63, 126,
		252, 229, 215, 179, 123, 246, 241, 255,
		227, 219, 171,  75, 150,  49,  98, 196,
		149,  55, 110, 220, 165,  87, 174,  65,
		130,  25,  50, 100, 200, 141,   7,  14,
		 28,  56, 112, 224, 221, 167,  83, 166,
		 81, 162,  89, 178, 121, 242, 249, 239,
		195, 155,  43,  86, 172,  69, 138,   9,
		 18,  36,  72, 144,  61, 122, 244, 245,
		247, 243, 251, 235, 203, 139,  11,  22,
		 44,  88, 176, 125, 250, 233, 207, 131,
		 27,  54, 108, 216, 173,  71, 142,   1,
	];

	public static create( ewords: number )
	{
		let gx_array: number[] = [ 0, 0 ];

		for( let i = 1 ; i < ewords ; ++i )
		{
			gx_array = Gx.calc( gx_array, [ 0, i ] );
		}

		const gx: { a: number, x: number }[] = [];

		for ( let i = 0 ; i <= ewords ; ++i )
		{
			gx.push( { a: gx_array[ i ], x: ewords - i } );
		}

		return gx;
	}

	private static calc( base_array: number[], n_array: number[] )
	{
		const ret: number[] = [];

		for( let i = 0 ; i < n_array.length ; ++i )
		{
			for ( let j = 0 ; j < base_array.length ; ++j )
			{
				// 係数部分のかけ算は足し算になる
				let val = n_array[ i ] + base_array[ j ];
				if ( 255 < val ) { val -= 255; }

				if ( ret[ i + j ] === undefined )
				{
					ret[ i + j ] = val;
				} else
				{
					ret[ i + j ] = Gx.sum( ret[ i + j ], val );
				}
			}
		}

		return ret;
	}

	private static sum( i: number, j: number )
	{

		let sum = Gx.alpha[ i ] ^ Gx.alpha[ j ];

		if ( 255 < sum ) { sum -= 255; }

		return Gx.alpha.indexOf( sum );
	}
}

const list = [ 7, 10, 13, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68 ];

list.forEach( ( e ) =>
{
	console.log( e + ': [ ' + Gx.create( e ).map( ( v ) => { return '{ a: ' + v.a + ', x: ' + v.x + '}'; } ).join( ', ' ) + ' ],' );
} );
